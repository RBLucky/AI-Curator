# Generated by Django 5.2.1 on 2025-05-22 18:54

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name. Auto-Generated if left blank.', max_length=110, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='AiTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('link', models.URLField(help_text="Link to the tool's official website or page.")),
                ('documentation_link', models.URLField(blank=True, null=True)),
                ('tutorial_link', models.URLField(blank=True, null=True)),
                ('added_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('perplexity_query', models.CharField(blank=True, help_text="A specific question to ask Perplexity about this tool (e.g. 'What is [Tool Name] and how does it work?').", max_length=500, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_tools', to='curator_app.category')),
            ],
            options={
                'ordering': ['-added_date'],
            },
        ),
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('rss_url', models.URLField(help_text='The URL of the RSS feed.', unique=True)),
                ('website_url', models.URLField(blank=True, help_text='The main website URL (optional).', null=True)),
                ('last_fetched', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_sources', to='curator_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='NewsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('link', models.URLField(unique=True)),
                ('summary', models.TextField(blank=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('fetched_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_items', to='curator_app.category')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_items', to='curator_app.newssource')),
            ],
            options={
                'ordering': ['-published_date', '-fetched_date'],
            },
        ),
    ]
